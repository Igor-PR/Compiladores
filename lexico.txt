INT int 1
MAIN main 1
LBRACKET ( 1
RBRACKET ) 1
LBRACE { 2
FLOAT float 3
ID a 3
PCOMMA ; 3
ID a 4
ATTR = 4
FLOAT_CONST 1.1 4
PCOMMA ; 4
INT int 5
ID i 5
COMMA , 5
ID inc 5
COMMA , 5
ID j 5
PCOMMA ; 5
ID i 6
ATTR = 6
INTEGER_CONST 0 6
PCOMMA ; 6
ID inc 7
ATTR = 7
INTEGER_CONST 2 7
PCOMMA ; 7
ID j 8
ATTR = 8
INTEGER_CONST 5 8
PCOMMA ; 8
INT int 9
ID x 9
COMMA , 9
ID y 9
PCOMMA ; 9
READ read 10
ID y 10
PCOMMA ; 10
ID x 11
ATTR = 11
INTEGER_CONST 0 11
PCOMMA ; 11
WHILE while 12
LBRACKET ( 12
ID i 12
LT < 12
ID j 12
RBRACKET ) 12
LBRACE { 13
ID i 14
ATTR = 14
ID i 14
PLUS + 14
ID inc 14
PCOMMA ; 14
ID a 15
ATTR = 15
ID a 15
MULT * 15
ID i 15
PCOMMA ; 15
RBRACE } 16
IF if 17
LBRACKET ( 17
ID a 17
LT < 17
FLOAT_CONST 10.0 17
RBRACKET ) 17
LBRACE { 18
PRINT print 19
LBRACKET ( 19
ID a 19
PLUS + 19
ID i 19
RBRACKET ) 19
PCOMMA ; 19
RBRACE } 20
ELSE else 21
LBRACE { 21
IF if 22
LBRACKET ( 22
ID x 22
EQ == 22
ID y 22
RBRACKET ) 22
LBRACE { 22
ID x 23
ATTR = 23
ID x 23
PLUS + 23
INTEGER_CONST 6 23
PCOMMA ; 23
RBRACE } 24
IF if 25
LBRACKET ( 25
LBRACKET ( 25
ID a 25
EQ == 25
ID x 25
RBRACKET ) 25
AND && 25
LBRACKET ( 25
ID a 25
EQ == 25
ID y 25
RBRACKET ) 25
OR || 25
LBRACKET ( 25
ID i 25
NE != 25
ID x 25
RBRACKET ) 25
RBRACKET ) 25
LBRACE { 25
PRINT print 26
LBRACKET ( 26
ID x 26
RBRACKET ) 26
PCOMMA ; 26
RBRACE } 27
ELSE else 28
LBRACE { 28
ID y 29
ATTR = 29
ID y 29
PLUS + 29
INTEGER_CONST 3 29
PCOMMA ; 29
RBRACE } 30
RBRACE } 31
RBRACE } 32
$  34
